{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Builds VPC w/ Internet Gateways, NAT Gateway, public and private subnets and associated route tables.",
	"Parameters": {
		"KeyName": {
			"Description": "Required: Specify your AWS EC2 Key Pair.-    RE  CSNINE",
			"Type": "AWS::EC2::KeyPair::KeyName"
		},
		"DhcpIDmng": {
			"Description": "ID of DHCP optionset for mng  -   RE   :dopt-70598f15",
			"Type": "String",
			"Default": "dopt-70598f15"
		},
		"DHCPDomainName": {
			"Description": "Domain name for the DHCP options set",
			"Type": "String",
			"Default": "cscloud.com"
		},
		"DomainDCIP": {
			"Description": "Domain name for the DHCP options set -   RE   :172.20.0.100",
			"Type": "String",
			"Default": "172.20.0.100"
		},

		"VPCName1": {
			"Description": "Name for the new POD",
			"Type": "String",
			"Default": "RE99"
		},
		"DNSSupport": {
			"Description": "Enable DNS Support?",
			"Type": "String",
			"AllowedValues": ["true", "false"],
			"Default": "true"
		},
		"DNSHostnames": {
			"Description": "Enable DNS Hostnames?",
			"Type": "String",
			"AllowedValues": ["true", "false"],
			"Default": "true"
		},

		"VPCP02CIDR": {
			"Description": "CIDR block for the VPC -Example showed as Default: -   RE: 172.22.0.0/16 ",
			"Type": "String",
			"Default": "172.22.0.0/16"
		},
		"FORSUBNETS": {
			"Description": "Write the 2 first octets of VPCP02CIDR - for subent calculation  -Example showed as Default -   RE: 172.22",
			"Type": "String",
			"Default": "172.22"
		},

		"MNGVPCID": {
			"Type": "AWS::EC2::VPC::Id",
			"Description": "VpcId of your existing Managment Layer (MNG-VPC) -    RE -  vpc-4d8d0f28"
		},
		"MNGCIDR": {
			"Type": "String",
			"Description": "CIDR OF MNG VPC  (MNG-VPC)-   RE:172.20.0.0/16",
			"Default": "172.20.0.0/16"
		},
		"MNGRouteTableAsso": {
			"Type": "String",
			"Description": "Please Enter Main Route Table ID of MNG VPC -Example shown -   RE :rtb-068c1163",
			"Default": "rtb-068c1163"
		},
		"BaseAppAMI": {
			"Type": "String",
			"Description": "Provide Golden AMI for SO,CM,AG,IN,MA Creation...- This will use the same AMI for all the listed machines. ",
			"Default": "ami-136a3473"
		},
		"BaseGCAMI": {
			"Type": "String",
			"Description": "Provide Golden AMI for GOOGLE-CACHE Server AKA GC Creation... ",
			"Default": "ami-496c3229"
		},
		"BaseDSAMI": {
			"Type": "String",
			"Description": "Provide Golden AMI for DEBUG Server AKA DS Creation... ",
			"Default": "ami-b3f1aed3"
		},
		"BaseCPAMI": {
			"Type": "String",
			"Description": "Provide Golden AMI for CLICKPUSH Server AKA CP Creation... ",
			"Default": "ami-ed6a348d"
		}

	},

	"Resources": {

		"VPC1": {
			"Type": "AWS::EC2::VPC",

			"Properties": {
				"CidrBlock": {
					"Ref": "VPCP02CIDR"
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Ref": "VPCName1"
						}
					}
				],
				"EnableDnsSupport": {
					"Ref": "DNSSupport"
				},
				"EnableDnsHostnames": {
					"Ref": "DNSHostnames"
				}
			}
		},

		"DHCPOptionsSetAssoc": {
			"Type": "AWS::EC2::VPCDHCPOptionsAssociation",
			"Properties": {
				"DhcpOptionsId": {
					"Ref": "DhcpIDmng"
				},
				"VpcId": {
					"Ref": "VPC1"
				}
			}
		},

		"NATGateway1": {
			"Type": "AWS::EC2::NatGateway",
			"Properties": {
				"AllocationId": {
					"Fn::GetAtt": ["EIP1", "AllocationId"]
				},
				"SubnetId": {
					"Ref": "ST01NONAT2A"
				}
			}
		},
		"EIP1": {
			"Type": "AWS::EC2::EIP",
			"Properties": {
				"Domain": "vpc"
			}
		},
		"InternetGateway1": {
			"Type": "AWS::EC2::InternetGateway",
			"Properties": {
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Ref": "VPCName1"
						}
					}
				]
			}
		},
		"AttachInternetGateway1": {
			"Type": "AWS::EC2::VPCGatewayAttachment",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"InternetGatewayId": {
					"Ref": "InternetGateway1"
				}
			}
		},
		"NATtonewpod115": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01Reporting2A"
				}
			}

		},
		"MaintoNoNat": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "MAINRT1"
				},
				"SubnetId": {
					"Ref": "ST01NONAT2A"
				}
			}

		},
		"NATtonewpod": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01ADMIN2A"
				}
			}

		},
		"NATtonewpod1": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01ADMIN2B"
				}
			}

		},
		"NATtonewpod2": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01CMAgents2B"
				}
			}

		},
		"NATtonewpod116": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01CMAgents2A"
				}
			}

		},
		"NATtonewpod3": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01SOStudio2A"
				}
			}

		},
		"NATtonewpod4": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01SOStudio2B"
				}
			}

		},
		"NATtonewpod5": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01Agents2A"
				}
			}

		},
		"NATtonewpod6": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01CMIIS2A"
				}
			}

		},
		"NATtonewpod7": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01DB2A"
				}
			}

		},
		"NATtonewpod8": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01Agents2B"
				}
			}

		},
		"NATtonewpod9": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01SOStudio2A"
				}
			}

		},
		"NATtonewpod10": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01CMIIS2B"
				}
			}

		},
		"NATtonewpod11": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01Integration2A"
				}
			}

		},
		"NATtonewpod12": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01Reporting2B"
				}
			}

		},
		"NATtonewpod13": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01Integration2B"
				}
			}

		},
		"NATtonewpod114": {
			"Type": "AWS::EC2::SubnetRouteTableAssociation",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"SubnetId": {
					"Ref": "ST01DB2B"
				}
			}

		},

		"MaintonewPOD": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Ref": "VPCP02CIDR"
				},
				"RouteTableId": {
					"Ref": "MNGRouteTableAsso"
				},
				"VpcPeeringConnectionId": {
					"Ref": "VPCPeeringConnection1"
				}
			}
		},

		"MAINRT1": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "Main New Pod"
					}
				]
			}
		},

		"PublicRoute1": {
			"DependsOn": "AttachInternetGateway1",
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "MAINRT1"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"GatewayId": {
					"Ref": "InternetGateway1"
				}
			}
		},

		"NATRT1": {
			"Type": "AWS::EC2::RouteTable",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "NAT NewPod"
					}
				]
			}
		},

		"PrivateRoute1": {
			"DependsOn": "NATGateway1",
			"Type": "AWS::EC2::Route",
			"Properties": {
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"DestinationCidrBlock": "0.0.0.0/0",
				"NatGatewayId": {
					"Ref": "NATGateway1"
				}
			}
		},

		"PeeringRoute2": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Ref": "MNGCIDR"
				},
				"RouteTableId": {
					"Ref": "NATRT1"
				},
				"VpcPeeringConnectionId": {
					"Ref": "VPCPeeringConnection1"
				}
			}
		},
		"PeeringRoute1": {
			"Type": "AWS::EC2::Route",
			"Properties": {
				"DestinationCidrBlock": {
					"Ref": "MNGCIDR"
				},
				"RouteTableId": {
					"Ref": "MAINRT1"
				},
				"VpcPeeringConnectionId": {
					"Ref": "VPCPeeringConnection1"
				}
			}
		},

		"ST01ADMIN2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "12.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "Admin - 2A"]]
						}

					}
				]
			}
		},
		"ST01ADMIN2B": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},

				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "13.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "Admin - 2B"]]
						}
					}
				]
			}
		},
		"ST01CMAgents2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},

				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "2.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "CM Agents - 2A"]]
						}
					}
				]
			}
		},
		"ST01CMAgents2B": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},

				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "3.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "CM Agents - 2B"]]
						}
					}
				]
			}
		},
		"ST01SOStudio2B": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "1.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "SO (Studio) - 2B"]]
						}
					}
				]
			}
		},
		"ST01Agents2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},

				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "8.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "Agents - 2A"]]
						}
					}
				]
			}
		},
		"ST01CMIIS2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},

				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "4.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "CM IIS - 2A"]]
						}

					}
				]
			}
		},
		"ST01DB2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},

				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "14.0/27"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "DB - 2A"]]
						}

					}
				]
			}
		},
		"ST01Agents2B": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "9.0/27"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "Agents - 2B"]]
						}
					}
				]
			}
		},
		"ST01SOStudio2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "0.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "SO (Studio) - 2A"]]
						}

					}
				]
			}
		},
		"ST01Reporting2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "6.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "Reporting - 2A"]]
						}
					}
				]
			}
		},
		"ST01CMIIS2B": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "5.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "CM IIS - 2B"]]
						}
					}
				]
			}
		},
		"ST01Integration2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "10.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "Integration - 2A"]]
						}
					}
				]
			}
		},
		"ST01NONAT2A": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "14.32/28"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["0", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "NO NAT - 2A"]]
						}
					}
				]
			}
		},
		"ST01Reporting2B": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "7.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "Reporting - 2B"]]
						}
					}
				]
			}
		},
		"ST01Integration2B": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "11.0/24"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "Integration - 2B"]]
						}
					}
				]
			}
		},
		"ST01DB2B": {
			"Type": "AWS::EC2::Subnet",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"CidrBlock": {
					"Fn::Join": [".", [{
								"Ref": "FORSUBNETS"
							}, "15.0/27"]]
				},
				"AvailabilityZone": {
					"Fn::Select": ["1", {
							"Fn::GetAZs": {
								"Ref": "AWS::Region"
							}
						}
					]
				},
				"Tags": [{
						"Key": "Name",

						"Value": {
							"Fn::Join": [" - ", [{
										"Ref": "VPCName1"
									}, "DB - 2B"]]
						}
					}
				]
			}
		},

		"VPCPeeringConnection1": {
			"Type": "AWS::EC2::VPCPeeringConnection",
			"Properties": {
				"VpcId": {
					"Ref": "VPC1"
				},
				"PeerVpcId": {
					"Ref": "MNGVPCID"
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["", [{
										"Ref": "VPCName1"
									}, ">< MNG PCX"]]
						}

					}
				]
			}
		},

		"STTUNNEL": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-TUNNEL"]]
				},

				"VpcId": {
					"Ref": "VPC1"
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-TUNNEL"]]
						}

					}
				]

			}

		},

		"STP01STUDIO": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-STUDIO"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-STUDIO"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}

					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}

		},

		"STP01SOAGENTS": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-AGENTS"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-AGENTS"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"STP01RA": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-RA"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-RA"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"STP01PUSH": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-PUSH"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-PUSH"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"STP01INT": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-INT"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-INT"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"STP01GCAGENTS": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "GC-AGENTS"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "GC-AGENTS"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"STP01DEBUG": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-DEBUG"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-DEBUG"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}, {
						"IpProtocol": "-1",
						"CidrIp": {
							"Ref": "VPCP02CIDR"
						}
					}
				]

			}
		},
		"STP01DB": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-DB"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-DB"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}, {
						"IpProtocol": "tcp",
						"CidrIp": {
							"Ref": "VPCP02CIDR"
						},
						"FromPort": "1433",
						"ToPort": "1433"
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"STP01CMSITE": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-CM-SITE"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-CM-SITE"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"STP01CMAGENTS": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, "-CM-AGENTS"]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, "-CM-AGENTS"]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"STP01": {
			"Type": "AWS::EC2::SecurityGroup",
			"Properties": {
				"GroupDescription": {
					"Fn::Join": ["-SG", [{
								"Ref": "VPCName1"
							}, " "]]
				},
				"Tags": [{
						"Key": "Name",
						"Value": {
							"Fn::Join": ["-SG", [{
										"Ref": "VPCName1"
									}, " "]]
						}

					}
				],
				"VpcId": {
					"Ref": "VPC1"
				},
				"SecurityGroupIngress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}

				],
				"SecurityGroupEgress": [{
						"IpProtocol": "-1",
						"CidrIp": {
							"Fn::Join": ["/", [{
										"Ref": "DomainDCIP"
									}, "32"]]
						}
					}
				]
			}
		},
		"SO01": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01STUDIO"
					}
				],
				"SubnetId": {
					"Ref": "ST01SOStudio2B"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-SO01"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"$hostname =\"RE-P99-SO01\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"SO2": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01STUDIO"
					}
				],
				"SubnetId": {
					"Ref": "ST01SOStudio2A"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-SO02"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-SO02\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"MA01": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01CMAGENTS"
					}
				],
				"SubnetId": {
					"Ref": "ST01CMAgents2A"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-MA01"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-MA01\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"MA02": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01CMAGENTS"
					}
				],
				"SubnetId": {
					"Ref": "ST01CMAgents2B"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-MA02"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-MA02\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"IN1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01INT"
					}
				],
				"SubnetId": {
					"Ref": "ST01Integration2A"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-IN01"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-IN01\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"IN2": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01INT"
					}
				],
				"SubnetId": {
					"Ref": "ST01Integration2A"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-IN02"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-IN02\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"CM1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01CMSITE"
					}
				],
				"SubnetId": {
					"Ref": "ST01CMIIS2A"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-CM01"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-CM01\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"CM2": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01CMSITE"
					}
				],
				"SubnetId": {
					"Ref": "ST01CMIIS2A"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-CM02"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-CM02\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"AG1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01SOAGENTS"
					}
				],
				"SubnetId": {
					"Ref": "ST01Agents2A"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-AG01"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-AG01\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"AG2": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseAppAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01SOAGENTS"
					}
				],
				"SubnetId": {
					"Ref": "ST01Agents2B"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-AG02"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-AG02\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"GC1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseGCAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01GCAGENTS"
					}
				],
				"SubnetId": {
					"Ref": "ST01Agents2B"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-GC01"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-GC01\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"CP1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseCPAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01PUSH"
					}
				],
				"SubnetId": {
					"Ref": "ST01Agents2B"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-CP01"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-CP01\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		},
		"DS1": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"InstanceType": "t2.large",
				"ImageId": {
					"Ref": "BaseDSAMI"
				},
				"SecurityGroupIds": [{
						"Ref": "STP01"
					}, {
						"Ref": "STP01DEBUG"
					}
				],
				"SubnetId": {
					"Ref": "ST01SOStudio2A"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"Tags": [{
						"Key": "Name",
						"Value": "RE-P99-DS01"
					}
				],
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": [
							"",
							[
								"<powershell>\n",
								"### Join the domain...\n",
								"$hostname =\"RE-P99-DS01\" \n",
								"$password = \"xy8jzXY*JZ\" | ConvertTo-SecureString -asPlainText -Force\n",
								"$username = \"cscloud.com\\vladi.rahmanov\"\n",
								"$credential = New-Object System.Management.Automation.PSCredential($username,$password) \n",
								"Rename-Computer -NewName $hostname \n",
								"sleep 5 \n",
								"add-computer -DomainName cscloud.com -Credential $credential -force -Options JoinWithNewName,AccountCreate -restart\n",
								"</powershell>\n"
							]
						]
					}
				}
			}
		}

	}
}
